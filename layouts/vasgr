default partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {
	name[Group1]= "Greek (Vas)";

	key <TLDE> {[ grave, asciitilde ]};
	key <AE01> {[ 1, exclam ]};
	key <AE02> {[ 2, at ]};
	key <AE03> {[ 3, numbersign]};
	key <AE04> {[ 4, dollar ]};
	key <AE05> {[ 5, percent ]};
	key <AE06> {[ 6, asciicircum ]};
	key <AE07> {[ 7, ampersand ]};
	key <AE08> {[ 8, asterisk ]};
	key <AE09> {[ 9, parenleft ]};
	key <AE10> {[ 0, parenright ]};
	key <AE11> {[ minus, underscore ]};
	key <AE12> {[ equal, plus ]};

	key <AD01> {[ Greek_chi, Greek_CHI ]};
	key <AD02> {[ Greek_kappa, Greek_KAPPA ]};
	key <AD03> {[ dead_acute, dead_diaeresis ]};
	key <AD04> {[ Greek_mu, Greek_MU ]};
	key <AD05> {[ Greek_xi, Greek_XI ]};
	key <AD06> {[ Greek_psi, Greek_PSI ]};
	key <AD07> {[ Greek_omega, Greek_OMEGA ]};
	key <AD08> {[ Greek_eta, Greek_ETA ]};
	key <AD09> {[ Greek_delta, Greek_DELTA ]};
	key <AD10> {[ semicolon, colon ]};
	key <AD11> {[ bracketleft, braceleft ]};
	key <AD12> {[ bracketright, braceright ]};
	key <BKSL> {[ backslash, bar ]};

	key <AC01> {[ Greek_rho, Greek_RHO ]};
	key <AC02> {[ Greek_sigma, Greek_SIGMA ]};
	key <AC03> {[ Greek_tau, Greek_TAU ]};
	key <AC04> {[ Greek_nu, Greek_NU ]};
	key <AC05> {[ Greek_finalsmallsigma, Greek_SIGMA ]};
	key <AC06> {[ Greek_upsilon, Greek_UPSILON ]};
	key <AC07> {[ Greek_iota, Greek_IOTA ]};
	key <AC08> {[ Greek_epsilon, Greek_EPSILON ]};
	key <AC09> {[ Greek_omicron, Greek_OMICRON ]};
	key <AC10> {[ Greek_alpha, Greek_ALPHA ]};
	key <AC11> {[ apostrophe, quotedbl ]};

	key <AB01> {[ Greek_zeta, Greek_ZETA ]};
	key <AB02> {[ Greek_phi, Greek_PHI ]};
	key <AB03> {[ Greek_gamma, Greek_GAMMA ]};
	key <AB04> {[ Greek_lambda, Greek_LAMBDA ]};
	key <AB05> {[ Greek_theta, Greek_THETA ]};
	key <AB06> {[ Greek_beta, Greek_BETA ]};
	key <AB07> {[ Greek_pi, Greek_PI ]};
	key <AB08> {[ comma, less ]};
	key <AB09> {[ period, greater ]};
	key <AB10> {[ slash, question ]};

	key <SPCE> {[ space, space ]};
};

partial modifier_keys
xkb_symbols "modifiers" {
	include "vasgr(basic)"
	key <CAPS> {[ Control_L, Control_L ]};
	key <LCTL> {[ Caps_Lock ]};
	key <RALT> {[ Shift_L, Shift_L ]};
};
